This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.gitignore
eslint.config.js
index.html
package.json
public/vite.svg
README.md
src/App.jsx
src/assets/react.svg
src/components/About.jsx
src/components/Contact.jsx
src/components/Footer.jsx
src/components/Hero.jsx
src/components/Navbar.jsx
src/components/QuoteSection.jsx
src/index.css
src/main.jsx
vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "iniya-portfolio",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/postcss": "^4.1.12",
    "@tailwindcss/vite": "^4.1.12",
    "postcss": "^8.5.6",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "tailwindcss": "^4.1.12"
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.1.2"
  }
}
</file>

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="README.md">
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
</file>

<file path="src/App.jsx">
// src/App.jsx
import React from 'react';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import QuoteSection from './components/QuoteSection';
import Contact from './components/Contact';
import Footer from './components/Footer';

function App() {
  return (
    // Apply Inter font globally and the custom cursor class here
    <div className="font-['Inter'] antialiased text-gray-800 custom-cursor">
      <Navbar />
      <main>
        <Hero />
        <About />
        <QuoteSection />
        <Contact />
      </main>
      <Footer />
    </div>
  );
}

export default App;
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/index.css">
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Island+Moments&display=swap');
@import "tailwindcss";

html {
  scroll-behavior: smooth;
  --cursor-size: 24px;
}

body {
  /* We'll apply 'Inter' using a class in App.jsx or directly on elements */
  background-color: #fff; /* Ensure body background is white */
}

/* New custom cursor class */
.custom-cursor {
  cursor: url('./assets/custom-cursor.png') var(--cursor-size) var(--cursor-size), auto;
}
</file>

<file path="src/main.jsx">
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
</file>

<file path="vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [tailwindcss(), react()],
})
</file>

<file path="src/components/About.jsx">
import React, { useState, useEffect, useRef } from 'react';

const AboutSection = () => {
  const [isVisible, setIsVisible] = useState(false);
  const sectionRef = useRef(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      {
        threshold: 0.3, // Trigger when 30% of the section is visible
      }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => {
      if (sectionRef.current) {
        observer.unobserve(sectionRef.current);
      }
    };
  }, []);

  return (
    <section 
      ref={sectionRef}
      id="about" 
      className="bg-[#361919] flex items-center justify-center px-8 py-30 overflow-hidden"
    >
      <div className="max-w-6xl w-full relative">
       
        {/* Left Triangle */}
        <div 
          className={`absolute left-48 top-8 transform -translate-y-1/2 w-44 h-44 transition-all duration-1000 ease-out ${
            isVisible ? 'translate-x-0 opacity-100 rotate-0' : '-translate-x-32 opacity-0 -rotate-45'
          } hover:scale-110 hover:rotate-12 hover:opacity-80 transition-transform duration-500`}
        >
          <svg viewBox="0 0 100 100" className="w-full h-full">
            <polygon
              points="10,30 60,70,80,10"
              fill="none"
              stroke="rgba(255, 255, 255, 0.3)"
              strokeWidth="1"
              className="animate-pulse"
            />
          </svg>
        </div>

        {/* Right Triangle */}
        <div 
          className={`absolute right-48 top-8 transform -translate-y-1/2 w-44 h-44 transition-all duration-1000 ease-out delay-200 ${
            isVisible ? 'translate-x-0 opacity-100 rotate-0' : 'translate-x-32 opacity-0 rotate-45'
          } hover:scale-110 hover:-rotate-12 hover:opacity-80 transition-transform duration-500`}
        >
          <svg viewBox="0 0 100 100" className="w-full h-full">
            <polygon
              points="40,70 40,20 90,50"
              fill="none"
              stroke="rgba(255, 255, 255, 0.3)"
              strokeWidth="1"
              className="animate-pulse"
            />
          </svg>
        </div>

        {/* Main Content */}
        <div className="text-center space-y-8">
          {/* Header */}
          <div 
            className={`transition-all duration-1000 ease-out delay-300 ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
          >
            <h2 className="text-3xl font-bold text-white mb-8 hover:text-gray-200 hover:scale-105 transition-all duration-300 cursor-default">
              Iniya B.C
            </h2>
            
            {/* Animated underline */}
            <div className="flex justify-center">
              <div 
                className={`h-0.5 bg-gray-400 transition-all duration-1000 ease-out delay-500 ${
                  isVisible ? 'w-62' : 'w-0'
                } hover:bg-white transition-colors duration-300`}
              ></div>
            </div>
          </div>

          {/* About Text */}
          <div 
            className={`max-w-7xl mx-auto transition-all duration-1200 ease-out delay-700 ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
            }`}
          >
            <p className="text-white text-2xl leading-loose italic hover:text-gray-100 transition-colors duration-500 cursor-default">
              I am a dedicated psychology student with a strong passion for criminal psychology. My academic
              journey has given me a deep understanding of human behavior, motivations, and the legal system.
              Through my internship at <span className="hover:text-yellow-300 transition-colors duration-300">SAARAL Psychiatric and De-addiction Centre</span>, I have gained practical
              experience in clinical settings, where I observed various therapeutic interventions and assisted in
              patient care. This experience strengthened my commitment to contributing positively to the field
              by applying psychological principles to aid in legal proceedings. I believe that the understanding of the
              human mind is the first step toward creating meaningful solutions and a more just society.
            </p>
          </div>
        </div>

        {/* Floating background elements for extra visual interest */}
        {/* <div 
          className={`absolute top-1/4 left-1/4 w-2 h-2 bg-white/20 rounded-full transition-all duration-2000 ease-out delay-1000 ${
            isVisible ? 'opacity-100 animate-bounce' : 'opacity-0'
          }`}
        ></div> */}
        
        <div 
          className={`absolute bottom-1/4 right-1/4 w-3 h-3 bg-white/10 rounded-full transition-all duration-2000 ease-out delay-1200 ${
            isVisible ? 'opacity-100 animate-pulse' : 'opacity-0'
          }`}
        ></div>
      </div>
    </section>
  );
};

export default AboutSection;
</file>

<file path="src/components/Contact.jsx">
import React, { useState, useEffect, useRef } from 'react';

const ContactSection = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });
  
  const [isVisible, setIsVisible] = useState(false);
  const [focusedField, setFocusedField] = useState(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const sectionRef = useRef(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      {
        threshold: 0.3,
      }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => {
      if (sectionRef.current) {
        observer.unobserve(sectionRef.current);
      }
    };
  }, []);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleFocus = (fieldName) => {
    setFocusedField(fieldName);
  };

  const handleBlur = () => {
    setFocusedField(null);
  };

  const handleSubmit = async () => {
    if (!formData.name || !formData.email || !formData.message) {
      return;
    }

    setIsSubmitting(true);
    
    // Simulate processing time
    await new Promise(resolve => setTimeout(resolve, 800));
    
    // Create mailto link with form data
    const subject = `Message from ${formData.name}`;
    const body = `Name: ${formData.name}\nEmail: ${formData.email}\n\nMessage:\n${formData.message}`;
    const mailtoLink = `mailto:iniyachandrakrishnan@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
   
    // Open email client
    window.location.href = mailtoLink;
   
    // Show success state
    setShowSuccess(true);
    setIsSubmitting(false);
    
    // Reset form after delay
    setTimeout(() => {
      setFormData({ name: '', email: '', message: '' });
      setShowSuccess(false);
    }, 2000);
  };

  const isFormValid = formData.name && formData.email && formData.message;

  return (
    <section 
      ref={sectionRef}
      id="contact" 
      className="bg-white flex items-center justify-center px-8 py-20 overflow-hidden"
    >
      <div className="max-w-2xl w-full">
       
        {/* Header with entrance animation */}
        <div 
          className={`text-center mb-16 transition-all duration-1000 ease-out ${
            isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
          }`}
        >
          <h2 className="text-5xl font-bold text-[#361921] mb-4 hover:text-[#2d1419] transition-colors duration-300">
            Get in Touch
          </h2>
          {/* Animated underline */}
          <div 
            className={`h-1 bg-gradient-to-r from-[#361921] to-[#2d1419] mx-auto rounded transition-all duration-1000 ease-out delay-300 ${
              isVisible ? 'w-78' : 'w-0'
            }`}
          ></div>
        </div>

        {/* Contact Form */}
        <div className="space-y-12">
         
          {/* Name Field */}
          <div 
            className={`relative transition-all duration-800 ease-out delay-200 ${
              isVisible ? 'translate-x-0 opacity-100' : '-translate-x-8 opacity-0'
            }`}
          >
            <div 
              className={`block text-lg mb-2 transition-colors duration-300 ${
                focusedField === 'name' ? 'text-[#361921]' : 'text-gray-700'
              }`}
            >
              Your Name
            </div>
            <div className="relative">
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                onFocus={() => handleFocus('name')}
                onBlur={handleBlur}
                className="w-full bg-transparent border-0 border-b-2 border-gray-400 py-3 text-lg text-gray-900 placeholder-transparent focus:outline-none focus:border-[#361921] transition-all duration-300 hover:border-gray-600"
              />
              {/* Animated focus line */}
              <div 
                className={`absolute bottom-0 left-0 h-0.5 bg-[#361921] transition-all duration-300 ${
                  focusedField === 'name' ? 'w-full' : 'w-0'
                }`}
              ></div>
            </div>
          </div>

          {/* Email Field */}
          <div 
            className={`relative transition-all duration-800 ease-out delay-400 ${
              isVisible ? 'translate-x-0 opacity-100' : '-translate-x-8 opacity-0'
            }`}
          >
            <div 
              className={`block text-lg mb-2 transition-colors duration-300 ${
                focusedField === 'email' ? 'text-[#361921]' : 'text-gray-700'
              }`}
            >
              Email
            </div>
            <div className="relative">
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                onFocus={() => handleFocus('email')}
                onBlur={handleBlur}
                className="w-full bg-transparent border-0 border-b-2 border-gray-400 py-3 text-lg text-gray-900 placeholder-transparent focus:outline-none focus:border-[#361921] transition-all duration-300 hover:border-gray-600"
              />
              {/* Animated focus line */}
              <div 
                className={`absolute bottom-0 left-0 h-0.5 bg-[#361921] transition-all duration-300 ${
                  focusedField === 'email' ? 'w-full' : 'w-0'
                }`}
              ></div>
            </div>
          </div>

          {/* Message Field */}
          <div 
            className={`relative transition-all duration-800 ease-out delay-600 ${
              isVisible ? 'translate-x-0 opacity-100' : '-translate-x-8 opacity-0'
            }`}
          >
            <div 
              className={`block text-lg mb-2 transition-colors duration-300 ${
                focusedField === 'message' ? 'text-[#361921]' : 'text-gray-700'
              }`}
            >
              Message
            </div>
            <div className="relative">
              <textarea
                name="message"
                value={formData.message}
                onChange={handleChange}
                onFocus={() => handleFocus('message')}
                onBlur={handleBlur}
                rows="4"
                className="w-full bg-transparent border-0 border-b-2 border-gray-400 py-3 text-lg text-gray-900 placeholder-transparent focus:outline-none focus:border-[#361921] transition-all duration-300 resize-none hover:border-gray-600"
              />
              {/* Animated focus line */}
              <div 
                className={`absolute bottom-0 left-0 h-0.5 bg-[#361921] transition-all duration-300 ${
                  focusedField === 'message' ? 'w-full' : 'w-0'
                }`}
              ></div>
            </div>
          </div>

          {/* Submit Button with enhanced animations */}
          <div 
            className={`flex justify-end mt-16 transition-all duration-800 ease-out delay-800 ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
          >
            <button
              onClick={handleSubmit}
              disabled={!isFormValid || isSubmitting}
              className={`relative overflow-hidden px-12 py-4 text-lg font-medium transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[#361921] focus:ring-offset-2 transform ${
                isFormValid && !isSubmitting 
                  ? 'bg-[#361921] text-white hover:bg-[#2d1419] hover:scale-105 cursor-pointer' 
                  : 'bg-gray-400 text-gray-200 cursor-not-allowed'
              } ${showSuccess ? 'bg-green-600 hover:bg-green-600' : ''}`}
            >
              {/* Button content with transitions */}
              <span 
                className={`transition-all duration-300 ${
                  isSubmitting ? 'opacity-0 translate-y-2' : 'opacity-100 translate-y-0'
                }`}
              >
                {showSuccess ? 'Message Sent!' : 'Send'}
              </span>
              
              {/* Loading spinner */}
              {isSubmitting && (
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                </div>
              )}
              
              {/* Success checkmark */}
              {showSuccess && (
                <div className="absolute inset-0 flex items-center justify-center">
                  <svg className="w-6 h-6 text-white animate-bounce" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </div>
              )}
            </button>
          </div>
        </div>

        {/* Progress indicator */}
        <div 
          className={`mt-8 transition-all duration-800 ease-out delay-1000 ${
            isVisible ? 'opacity-100' : 'opacity-0'
          }`}
        >
          <div className="flex space-x-2 justify-center">
            {['name', 'email', 'message'].map((field, index) => (
              <div
                key={field}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  formData[field] 
                    ? 'bg-[#361921] scale-125' 
                    : focusedField === field 
                      ? 'bg-[#361921]/50 scale-110' 
                      : 'bg-gray-300'
                }`}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactSection;
</file>

<file path="src/components/Footer.jsx">
import React from 'react';

const Footer = () => {
  const scrollToHome = () => {
    const homeSection = document.getElementById('home');
    if (homeSection) {
      homeSection.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <footer className="bg-[#361921] text-white text-center py-8 px-4 relative overflow-hidden">
      {/* Animated background elements */}
      <div className="absolute inset-0 opacity-10">
        <div className="absolute top-0 left-0 w-32 h-32 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full blur-xl animate-pulse"></div>
        <div className="absolute bottom-0 right-0 w-24 h-24 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full blur-xl animate-pulse delay-1000"></div>
      </div>
      
      {/* Main content */}
      <div className="relative z-10 space-y-4">
        {/* Logo/Brand section */}
        {/* <div className="mb-6">
          <button
            onClick={scrollToHome}
            className="group inline-flex items-center space-x-2 text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-400 via-purple-400 to-cyan-400 hover:from-pink-300 hover:via-purple-300 hover:to-cyan-300 transition-all duration-300 transform hover:scale-105  rounded-lg px-3 py-2"
            aria-label="Navigate to home section"
          >
            <span className="relative">
              inizx.me
              <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-pink-400 to-cyan-400 transition-all duration-300 group-hover:w-full"></span>
            </span>
            <svg 
              className="w-5 h-5 transform transition-transform duration-300 group-hover:-translate-y-1 group-hover:translate-x-1" 
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path 
                strokeLinecap="round" 
                strokeLinejoin="round" 
                strokeWidth={2} 
                d="M7 11l5-5m0 0l5 5m-5-5v12" 
              />
            </svg>
          </button>
        </div> */}

        {/* Divider line with animation */}
        <div className="relative">
          <div className="h-px bg-gradient-to-r from-transparent via-gray-400 to-transparent"></div>
          <div className="absolute top-0 left-0 h-px w-full bg-gradient-to-r from-pink-500 to-cyan-500 transform scale-x-0 animate-pulse"></div>
        </div>

        {/* Social links section (optional - you can add your social media) */}
        <div className="flex justify-center space-x-6 mb-4">
          {/* <a 
            href="#" 
            className="text-gray-400 hover:text-white transform hover:scale-110 transition-all duration-300 hover:rotate-12"
            aria-label="Social media link"
          >
            <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm4.5 8.5h-2v7h-3v-7h-1.5v-2.5h1.5v-1.5c0-2 1-3 3-3h2v2.5h-1.25c-.414 0-.75.336-.75.75v1.25h2l-.5 2.5z"/>
            </svg>
          </a> */}
          <a 
            href="#" 
            className="text-gray-400 hover:text-white transform hover:scale-110 transition-all duration-300 hover:-rotate-12"
            aria-label="Social media link"
          >
            <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
            </svg>
          </a>
          {/* <a 
            href="#" 
            className="text-gray-400 hover:text-white transform hover:scale-110 transition-all duration-300 hover:rotate-12"
            aria-label="Social media link"
          >
            <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
          </a> */}
          <a
            href="https://www.linkedin.com/in/your-profile" // Replace with your actual LinkedIn URL
            className="text-gray-400 hover:text-white transform hover:scale-110 transition-all duration-300 hover:rotate-12"
            aria-label="LinkedIn profile"
            target="_blank"
            rel="noopener noreferrer"
            >
            <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11 19h-3v-10h3v10zm-1.5-11.25c-.97 0-1.75-.79-1.75-1.75s.78-1.75 1.75-1.75 1.75.79 1.75 1.75-.78 1.75-1.75 1.75zm13.5 11.25h-3v-5.5c0-1.1-.9-2-2-2s-2 .9-2 2v5.5h-3v-10h3v1.5c.59-.87 1.57-1.5 2.5-1.5 1.93 0 3.5 1.57 3.5 3.5v6.5z"/>
            </svg>
            </a>
        </div>

        {/* Copyright text */}
        <p className="text-sm text-gray-300 transform hover:text-white transition-colors duration-300 animate-fade-in">
          Copyright © {new Date().getFullYear()} 
          <span className="ml-1 font-semibold bg-gradient-to-r from-pink-400 to-cyan-400 bg-clip-text text-transparent">
            inizx.me
          </span>
          <span className="ml-2 inline-block animate-bounce">✨</span>
        </p>
      </div>

      {/* Custom CSS for animations */}
      <style jsx>{`
        @keyframes fade-in {
          from { opacity: 0; transform: translateY(10px); }
          to { opacity: 1; transform: translateY(0); }
        }
        
        .animate-fade-in {
          animation: fade-in 0.6s ease-out;
        }
        
        @keyframes float {
          0%, 100% { transform: translateY(0px); }
          50% { transform: translateY(-10px); }
        }
        
        .animate-float {
          animation: float 3s ease-in-out infinite;
        }
      `}</style>
    </footer>
  );
};

export default Footer;
</file>

<file path="src/components/Navbar.jsx">
// src/components/Navbar.jsx
import React, { useState, useEffect } from 'react';
import profileAvatar from '../assets/profile-avatar.png'; // Ensure this path is correct

const Navbar = () => {
  const [isVisible, setIsVisible] = useState(true);
  const [lastScrollY, setLastScrollY] = useState(0);

  const navLinks = [
    { name: 'Home', href: '#hero' },
    { name: 'About me', href: '#about' },
    { name: 'Resume', href: '#resume' },
    { name: 'Contact', href: '#contact' },
  ];

  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = window.scrollY;
      
      // Show navbar when at top of page
      if (currentScrollY < 10) {
        setIsVisible(true);
      }
      // Hide when scrolling down, show when scrolling up
      else if (currentScrollY < lastScrollY) {
        setIsVisible(true);
      } else if (currentScrollY > lastScrollY && currentScrollY > 100) {
        setIsVisible(false);
      }
      
      setLastScrollY(currentScrollY);
    };

    // Throttle scroll events for better performance
    let ticking = false;
    const throttledHandleScroll = () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          handleScroll();
          ticking = false;
        });
        ticking = true;
      }
    };

    window.addEventListener('scroll', throttledHandleScroll);
    
    return () => window.removeEventListener('scroll', throttledHandleScroll);
  }, [lastScrollY]);

  return (
    <div 
      className={`
        fixed top-4 left-0 right-0 z-50
        w-full flex justify-center py-4  backdrop-blur-sm
        transition-transform duration-300 ease-in-out
        ${isVisible ? 'translate-y-0' : '-translate-y-full'}
      `}
    >
      <nav
        className={`
          bg-[#D9D9D9]
          border border-[#361919]
          rounded-full
          px-16 py-4
          shadow-md
          hover:shadow-lg
          flex items-center justify-between
          max-w-screen-lg
          w-full
          mx-auto
          space-x-4
          transition-shadow duration-300 ease-in-out
        `}
      >
        {/* Logo/Name - Left Side */}
        <div className="flex items-center space-x-4 group">
          <img
            src={profileAvatar}
            alt="Iniya B.C Avatar"
            className="w-10 h-10 rounded-full border border-gray-400 
                     transition-transform duration-300 ease-in-out
                     hover:scale-110 hover:shadow-md
                     cursor-pointer"
          />
          {/* Apply Island Moments font using arbitrary value */}
          <span className={`font-['Island_Moments'] text-[#361921] text-3xl md:text-4xl
                          transition-all duration-300 ease-in-out
                          hover:text-[#2d1419] hover:scale-105
                          cursor-pointer`}>
            Inizx
          </span>
        </div>

        {/* Navigation Links - Right Side */}
        <ul className="flex space-x-6 sm:space-x-8">
          {navLinks.map((link) => (
            <li key={link.name}>
              <a
                href={link.href}
                className={`
                  text-[#361921]
                  hover:text-[#361919]
                  transition-all duration-300 ease-in-out
                  text-base
                  font-bold
                  relative
                  hover:scale-105
                  hover:-translate-y-0.5
                  after:content-['']
                  after:absolute
                  after:w-0
                  after:h-0.5
                  after:bg-[#361919]
                  after:left-1/2
                  after:bottom-[-4px]
                  after:-translate-x-1/2
                  after:transition-all
                  after:duration-300
                  after:ease-in-out
                  hover:after:w-full
                `}
              >
                {link.name}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </div>
  );
};

export default Navbar;
</file>

<file path="src/components/QuoteSection.jsx">
import React, { useState, useEffect, useRef } from 'react';
import profileAvatar from '../assets/profile-avatar.png';
import quoteBg from '../assets/quote-bg.jpg';

const QuoteSection = () => {
  const [isVisible, setIsVisible] = useState(false);
  const [quoteVisible, setQuoteVisible] = useState(false);
  const sectionRef = useRef(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          // Trigger quote animation after avatar animation
          setTimeout(() => {
            setQuoteVisible(true);
          }, 800);
        }
      },
      {
        threshold: 0.2, // Trigger when 20% of the section is visible
      }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => {
      if (sectionRef.current) {
        observer.unobserve(sectionRef.current);
      }
    };
  }, []);

  return (
    <section 
      ref={sectionRef}
      className="relative flex items-center justify-center px-8 py-50 overflow-hidden"
    >
      {/* Background Image with Overlay */}
      <div
        className="absolute inset-0 bg-cover bg-center bg-no-repeat bg-fixed"
        style={{
          backgroundImage: `url(${quoteBg})`,
        }}
      >
        {/* Dark overlay for text readability with animation */}
        <div 
          className={`absolute inset-0 transition-all duration-2000 ease-out ${
            isVisible ? 'bg-black/10' : 'bg-black/40'
          }`}
        ></div>
      </div>

      {/* Content */}
      <div className="relative z-10 max-w-5xl w-full text-center">
       
        {/* Avatar Image with entrance animation */}
        <div 
          className={`flex justify-center mb-12 transition-all duration-1000 ease-out ${
            isVisible ? 'translate-y-0 opacity-100 scale-100' : 'translate-y-16 opacity-0 scale-75'
          }`}
        >
          <div className="w-32 h-32 rounded-full overflow-hidden shadow-2xl hover:shadow-3xl hover:scale-110 transition-all duration-500 group">
            <img
              src={profileAvatar}
              alt="Iniya B.C Avatar"
              className="w-full h-full object-cover group-hover:brightness-110 transition-all duration-500"
            />
            {/* Subtle hover ring effect */}
            <div className="absolute inset-0 rounded-full ring-4 ring-white/0 group-hover:ring-white/30 transition-all duration-500"></div>
          </div>
        </div>

        {/* Quote with Quotation Marks */}
        <div className="relative">
          {/* Opening Quote Mark with animation */}
          <div 
            className={`absolute -top-20 -left-8 text-[20vw] text-white/80 font-serif leading-none transition-all duration-1200 ease-out delay-300 ${
              quoteVisible ? 'translate-x-0 opacity-80 rotate-0' : '-translate-x-16 opacity-0 -rotate-45'
            } hover:opacity-100 hover:scale-105 transition-all duration-300`}
          >
            “
          </div>

          {/* Quote Text with staggered word animation */}
          <blockquote 
            className={`text-white text-2xl md:text-3xl lg:text-5xl font-light italic leading-relaxed px-16 transition-all duration-1000 ease-out delay-500 ${
              quoteVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            } hover:text-gray-100 hover:scale-[1.02] transition-all duration-500 cursor-default`}
          >
            <span 
              className={`inline-block transition-all duration-800 ease-out delay-700 ${
                quoteVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              Understanding the shadow
            </span>
            <br />
            <span 
              className={`inline-block transition-all duration-800 ease-out delay-900 ${
                quoteVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              is the first step toward finding the light.
            </span>
          </blockquote>

          {/* Closing Quote Mark with animation */}
          <div 
            className={`absolute -bottom-62 -right-18 text-[20vw] text-white/80 font-serif leading-none transition-all duration-1200 ease-out delay-600 ${
              quoteVisible ? 'translate-x-0 opacity-80 rotate-0' : 'translate-x-16 opacity-0 rotate-45'
            } hover:opacity-100 hover:scale-105 transition-all duration-300`}
          >
            ”
          </div>
        </div>

        {/* Subtle floating particles for ambiance */}
        <div className="absolute inset-0 pointer-events-none">
          {/* Floating particle 1 */}
          <div 
            className={`absolute top-1/4 left-1/4 w-1 h-1 bg-white/40 rounded-full transition-all duration-3000 ease-out delay-1000 ${
              quoteVisible ? 'opacity-100 animate-pulse' : 'opacity-0'
            }`}
          ></div>
          
          {/* Floating particle 2 */}
          <div 
            className={`absolute top-3/4 right-1/3 w-2 h-2 bg-white/20 rounded-full transition-all duration-2500 ease-out delay-1200 ${
              quoteVisible ? 'opacity-100 animate-bounce' : 'opacity-0'
            }`}
            style={{ animationDuration: '4s' }}
          ></div>
          
          {/* Floating particle 3 */}
          <div 
            className={`absolute top-1/2 left-1/6 w-1.5 h-1.5 bg-white/30 rounded-full transition-all duration-2800 ease-out delay-1400 ${
              quoteVisible ? 'opacity-100 animate-pulse' : 'opacity-0'
            }`}
            style={{ animationDuration: '3s' }}
          ></div>
        </div>
      </div>
    </section>
  );
};

export default QuoteSection;
</file>

<file path="src/components/Hero.jsx">
import React, { useState, useEffect } from 'react';
import mainProfilePic from '../assets/main-profile-pic.jpg';

const HeroSection = () => {
  const [isLoaded, setIsLoaded] = useState(false);
  const [progressBar1, setProgressBar1] = useState(0);
  const [progressBar2, setProgressBar2] = useState(0);

  useEffect(() => {
    // Trigger entrance animations after component mounts
    const timer = setTimeout(() => {
      setIsLoaded(true);
    }, 100);

    // Animate progress bars after text animations
    const progressTimer1 = setTimeout(() => {
      const interval1 = setInterval(() => {
        setProgressBar1(prev => {
          if (prev >= 100) {
            clearInterval(interval1);
            return 100;
          }
          return prev + 2;
        });
      }, 20);
    }, 1500);

    const progressTimer2 = setTimeout(() => {
      const interval2 = setInterval(() => {
        setProgressBar2(prev => {
          if (prev >= 100) {
            clearInterval(interval2);
            return 100;
          }
          return prev + 1.5;
        });
      }, 25);
    }, 2000);

    return () => {
      clearTimeout(timer);
      clearTimeout(progressTimer1);
      clearTimeout(progressTimer2);
    };
  }, []);

  return (
    <section id="hero" className="min-h-screen bg-white flex items-center justify-center px-4 py-20 mt-12 overflow-hidden">
      <div className="max-w-5xl w-full flex items-center justify-between gap-4">
       
        {/* Left Side - Image */}
        <div className="flex-1 flex justify-center">
          <div 
            className={`relative group transition-all duration-1000 ease-out transform ${
              isLoaded ? 'translate-x-0 opacity-100' : '-translate-x-full opacity-0'
            }`}
          >
            {/* Shadow layers - creating the thick shadow frame effect */}
            <div 
              className={`absolute top-4 left-4 w-11/12 h-full bg-[#361921] transition-all duration-500 ease-in-out group-hover:top-6 group-hover:left-6 group-hover:bg-[#2d1419]`}
            ></div>
           
            {/* Main image container */}
            <div className="relative overflow-hidden transform transition-all duration-500 ease-in-out group-hover:scale-105 group-hover:shadow-2xl">
              <img
                src={mainProfilePic}
                alt="Iniya B.C"
                className="w-11/12 h-full object-cover transition-all duration-500 ease-in-out group-hover:brightness-110 group-hover:contrast-105"
              />
              
              {/* Hover overlay */}
              <div className="absolute inset-0 bg-gradient-to-t from-[#361921]/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </div>
          </div>
        </div>

        {/* Right Side - Content */}
        <div className="flex-1 space-y-1">
          {/* Main heading with staggered animation */}
          <div 
            className={`transition-all duration-1000 ease-out transform delay-300 ${
              isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
          >
            <h1 className="text-4xl font-bold text-[#361921] mb-2 hover:text-[#2d1419] transition-colors duration-300">
              Iniya B.C
            </h1>
            <h2 
              className={`text-2xl text-black font-light transition-all duration-1000 ease-out transform delay-500 ${
                isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
              } hover:text-[#361921] transition-colors duration-300`}
            >
              Aspiring Criminal Psychologist
            </h2>
          </div>

          {/* Expertise and Hobby section */}
          <div 
            className={`space-y-2 mt-10 transition-all duration-1000 ease-out transform delay-700 ${
              isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
          >
            <div className="hover:transform hover:translate-x-2 transition-transform duration-300">
              <span className="text-lg font-semibold text-gray-800">Expertise: </span>
              <span className="text-lg text-gray-700">Teamwork, Problem-Solving, Research Skills</span>
            </div>
           
            <div className="hover:transform hover:translate-x-2 transition-transform duration-300">
              <span className="text-lg font-semibold text-gray-800">Hobby: </span>
              <span className="text-lg text-gray-700">Dancing, Drawing, Traveling, Reading</span>
            </div>
          </div>

          {/* Animated progress bars */}
          <div 
            className={`space-y-3 mt-20 transition-all duration-1000 ease-out transform delay-1000 ${
              isLoaded ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
          >
            {/* Progress Bar 1 */}
            <div className="w-32 h-4 bg-gray-200  overflow-hidden relative">
              <div 
                className="h-full bg-gradient-to-r from-[#361921] to-[#2d1419]  transition-all duration-1000 ease-out relative"
                style={{ width: `${progressBar1}%` }}
              >
                {/* Shimmer effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse"></div>
              </div>
            </div>

            {/* Progress Bar 2 */}
            <div className="w-40 h-4 bg-gray-200  overflow-hidden relative">
              <div 
                className="h-full bg-gradient-to-r from-[#D9D9D9] to-[#b5b5b5]  transition-all duration-1200 ease-out relative"
                style={{ width: `${progressBar2}%` }}
              >
                {/* Shimmer effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/40 to-transparent animate-pulse"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default HeroSection;
</file>

</files>
